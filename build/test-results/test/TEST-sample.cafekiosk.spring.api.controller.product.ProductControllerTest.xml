<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="sample.cafekiosk.spring.api.controller.product.ProductControllerTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2024-05-17T15:13:42" hostname="DESKTOP-HLQBGOF" time="0.075">
  <properties/>
  <testcase name="신규 상품을 등록시 상품 타입은 필수입니다" classname="sample.cafekiosk.spring.api.controller.product.ProductControllerTest" time="0.03"/>
  <testcase name="신규 상품을 등록시 상품 이름은 필수입니다." classname="sample.cafekiosk.spring.api.controller.product.ProductControllerTest" time="0.006"/>
  <testcase name="신규 상품을 등록시 상품 가격은 양수여야 합니다." classname="sample.cafekiosk.spring.api.controller.product.ProductControllerTest" time="0.005"/>
  <testcase name="판매 상품을 조회한다." classname="sample.cafekiosk.spring.api.controller.product.ProductControllerTest" time="0.016"/>
  <testcase name="신규 상품을 등록시 상품 판매상태는 필수입니다." classname="sample.cafekiosk.spring.api.controller.product.ProductControllerTest" time="0.006"/>
  <testcase name="신규 상품을 등록한다." classname="sample.cafekiosk.spring.api.controller.product.ProductControllerTest" time="0.007"/>
  <system-out><![CDATA[2024-05-18 00:13:41.821  INFO 13496 --- [    Test worker] .b.t.a.w.s.WebMvcTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [sample.cafekiosk.spring.api.controller.product.ProductControllerTest], using SpringBootContextLoader
2024-05-18 00:13:41.822  INFO 13496 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [sample.cafekiosk.spring.api.controller.product.ProductControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2024-05-18 00:13:41.822  INFO 13496 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [sample.cafekiosk.spring.api.controller.product.ProductControllerTest]: ProductControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-05-18 00:13:41.832  INFO 13496 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration sample.cafekiosk.CafekioskApplication for test class sample.cafekiosk.spring.api.controller.product.ProductControllerTest
2024-05-18 00:13:41.833  INFO 13496 --- [    Test worker] .b.t.a.w.s.WebMvcTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2024-05-18 00:13:41.833  INFO 13496 --- [    Test worker] .b.t.a.w.s.WebMvcTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3e2c8ef, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@290807e5, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@60bc308b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56499781, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43f99817, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2a2798a2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b9ecd05, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@31f1b268, org.springframework.test.context.event.EventPublishingTestExecutionListener@3ec7ad61, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2833c093, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7598d675, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4946485c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4ae958b0, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7c682e26, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4ff074a0]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.7)

2024-05-18 00:13:41.857  INFO 13496 --- [    Test worker] s.c.s.a.c.product.ProductControllerTest  : Starting ProductControllerTest using Java 11.0.23 on DESKTOP-HLQBGOF with PID 13496 (started by UserKYJ in C:\Users\UserKYJ\Desktop\cafekiosk)
2024-05-18 00:13:41.858  INFO 13496 --- [    Test worker] s.c.s.a.c.product.ProductControllerTest  : No active profile set, falling back to 1 default profile: "local"
2024-05-18 00:13:42.335  INFO 13496 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-18 00:13:42.335  INFO 13496 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-18 00:13:42.336  INFO 13496 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2024-05-18 00:13:42.347  INFO 13496 --- [    Test worker] s.c.s.a.c.product.ProductControllerTest  : Started ProductControllerTest in 0.512 seconds (JVM running for 3.797)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/products/new
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"77"]
             Body = {"type":null,"sellingStatus":"SELLING","name":"아메리카노","price":4000}
    Session Attrs = {}

Handler:
             Type = sample.cafekiosk.spring.api.controller.product.ProductController
           Method = sample.cafekiosk.spring.api.controller.product.ProductController#createProduct(ProductCreateRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"code":400,"status":"BAD_REQUEST","message":"상품 타입은 필수입니다.","data":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/products/new
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"70"]
             Body = {"type":"HANDMADE","sellingStatus":"SELLING","name":null,"price":4000}
    Session Attrs = {}

Handler:
             Type = sample.cafekiosk.spring.api.controller.product.ProductController
           Method = sample.cafekiosk.spring.api.controller.product.ProductController#createProduct(ProductCreateRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"code":400,"status":"BAD_REQUEST","message":"상품 이름은 필수입니다.","data":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/products/new
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"80"]
             Body = {"type":"HANDMADE","sellingStatus":"SELLING","name":"아메리카노","price":0}
    Session Attrs = {}

Handler:
             Type = sample.cafekiosk.spring.api.controller.product.ProductController
           Method = sample.cafekiosk.spring.api.controller.product.ProductController#createProduct(ProductCreateRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"code":400,"status":"BAD_REQUEST","message":"상품 가격은 양수여야 합니다.","data":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/products/selling
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = sample.cafekiosk.spring.api.controller.product.ProductController
           Method = sample.cafekiosk.spring.api.controller.product.ProductController#getSellingProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"code":200,"status":"OK","message":"OK","data":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/products/new
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"78"]
             Body = {"type":"HANDMADE","sellingStatus":null,"name":"아메리카노","price":4000}
    Session Attrs = {}

Handler:
             Type = sample.cafekiosk.spring.api.controller.product.ProductController
           Method = sample.cafekiosk.spring.api.controller.product.ProductController#createProduct(ProductCreateRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"code":400,"status":"BAD_REQUEST","message":"상품 판매상태는 필수입니다.","data":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/products/new
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"83"]
             Body = {"type":"HANDMADE","sellingStatus":"SELLING","name":"아메리카노","price":4000}
    Session Attrs = {}

Handler:
             Type = sample.cafekiosk.spring.api.controller.product.ProductController
           Method = sample.cafekiosk.spring.api.controller.product.ProductController#createProduct(ProductCreateRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"code":200,"status":"OK","message":"OK","data":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
